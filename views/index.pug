doctype html
html
  head
    include includes/head.pug
    title= title    
  body
    div.container.mt-3      
      div.col.text-center          
        a.h1.text-dark(href="/") Personal Library

      h2 Sample Front-End:
      div.library.p-3.mb-3
        div.d-flex.justify-content-between.mb-3
          h4 Books:
          div.dropdown.dropdown 
                button(class="btn btn-success dropdown-toggle", type="button", data-toggle="dropdown", aria-haspopup="true", aria-expanded="false") Add Book
                div.dropdown-menu.w-100
                  form.px-4.py-3(action='api/books', method="post")
                    div.form-group
                      label(for="title") Title:
                      input(class="form-control", type="text", name="title", placeholder="Enter a book title", required="required")
                    input(class="btn btn-success" type="submit" value="Submit")
        ul.list-group
          if books
            each book in books
              div.d-flex.align-items-center
                button(type="button" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center mr-2", data-toggle="collapse", data-target=`#collapse_${book._id}`)=book.title
                  |
                  span.ml-3.badge.badge-pill.badge-primary #{book.comments.length} comments
                form(action=`api/books/${book._id}?_method=DELETE`, method="post")
                  input.btn.btn-danger(type="submit" value="Delete")                
              div.collapse.py-3(id=`collapse_${book._id}`)
                ul
                  each comment in book.comments
                    li=comment
                form.form-inline(action=`api/books/${book._id}`, method="post")
                  div.form-group
                    label.mr-3(sr-only="Add new comment", for="comment")
                    input(class="form-control", type="text", name="comment", placeholder="Add a new comment", required="required")
                  input(class="btn btn-success" type="submit" value="Submit")
            form.d-flex.justify-content-center(action=`api/books?_method=DELETE`, method="post")
              input.btn.btn-warning.mt-3(type="submit" value="Delete All")                
          else
            div
              h3 There's no books!

      h2 User Stories:
      ul.list-group.mb-4
        li.list-group-item Nothing from my website will be cached in my client as a security measure.
        li.list-group-item I will see that the site is powered by 'PHP 4.2.0' even though it isn't as a security measure.
        li.list-group-item I can #[strong POST] a title to #[code /api/books] to add a book and returned will be the object with the title and a unique _id.        
        li.list-group-item I can #[strong GET] #[code /api/books] to retrieve an array of all books containing title, _id, and commentcount.
        li.list-group-item I can #[strong GET] #[code /api/books/{_id}] to retrieve a single object of a book containing title, _id, and an array of comments (empty array if no comments present).
        li.list-group-item I can #[strong POST] a comment to #[code /api/books/{_id}] to add a comment to a book and returned will be the books object similar to #[strong GET] #[code /api/books/{_id}].
        li.list-group-item I can #[strong DELETE] #[code /api/books/{_id}] to delete a book from the collection. Returned will be #[em 'delete successful' if successful].
        li.list-group-item If I try to request a book that doesn't exist I will get a #[em 'no book exists' message].
        li.list-group-item I can send a delete request to /api/books to delete all books in the database. Returned will be #[em 'complete delete successful'] if successful.
        li.list-group-item All 6 functional tests requiered are complete and passing.

    include includes/foot.pug